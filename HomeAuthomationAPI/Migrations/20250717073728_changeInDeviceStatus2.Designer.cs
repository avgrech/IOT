// <auto-generated />
using System;
using HomeAuthomationAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeAuthomationAPI.Migrations
{
    [DbContext(typeof(HomeAutomationContext))]
    [Migration("20250717073728_changeInDeviceStatus2")]
    partial class changeInDeviceStatus2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomeAuthomationAPI.Models.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int?>("RouterDeviceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("PropertyId")
                        .IsUnique()
                        .HasFilter("[PropertyId] IS NOT NULL");

                    b.HasIndex("RouterDeviceId");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RouterDeviceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RouterDeviceId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.DeviceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceId1")
                        .HasColumnType("int");

                    b.Property<string>("StatusJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("DeviceId1");

                    b.ToTable("DeviceStatuses");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.Organisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.Parameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSensor")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganisationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.RouterDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FriendlyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("UniqueId")
                        .IsUnique();

                    b.ToTable("RouterDevices");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsGlobalAdmin")
                        .HasColumnType("bit");

                    b.Property<int>("OrganisationId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.Configuration", b =>
                {
                    b.HasOne("HomeAuthomationAPI.Models.Device", "Device")
                        .WithMany("Configurations")
                        .HasForeignKey("DeviceId");

                    b.HasOne("HomeAuthomationAPI.Models.Property", "Property")
                        .WithOne("Configuration")
                        .HasForeignKey("HomeAuthomationAPI.Models.Configuration", "PropertyId");

                    b.HasOne("HomeAuthomationAPI.Models.RouterDevice", "RouterDevice")
                        .WithMany("Configurations")
                        .HasForeignKey("RouterDeviceId");

                    b.Navigation("Device");

                    b.Navigation("Property");

                    b.Navigation("RouterDevice");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.Device", b =>
                {
                    b.HasOne("HomeAuthomationAPI.Models.RouterDevice", "RouterDevice")
                        .WithMany("Devices")
                        .HasForeignKey("RouterDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RouterDevice");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.DeviceStatus", b =>
                {
                    b.HasOne("HomeAuthomationAPI.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeAuthomationAPI.Models.Device", null)
                        .WithMany("DeviceStatuses")
                        .HasForeignKey("DeviceId1");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.Parameter", b =>
                {
                    b.HasOne("HomeAuthomationAPI.Models.Device", "Device")
                        .WithMany("Parameters")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.Property", b =>
                {
                    b.HasOne("HomeAuthomationAPI.Models.Organisation", "Organisation")
                        .WithMany("Properties")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.RouterDevice", b =>
                {
                    b.HasOne("HomeAuthomationAPI.Models.Property", "Property")
                        .WithMany("RouterDevices")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.User", b =>
                {
                    b.HasOne("HomeAuthomationAPI.Models.Organisation", "Organisation")
                        .WithMany("Users")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.Device", b =>
                {
                    b.Navigation("Configurations");

                    b.Navigation("DeviceStatuses");

                    b.Navigation("Parameters");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.Organisation", b =>
                {
                    b.Navigation("Properties");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.Property", b =>
                {
                    b.Navigation("Configuration");

                    b.Navigation("RouterDevices");
                });

            modelBuilder.Entity("HomeAuthomationAPI.Models.RouterDevice", b =>
                {
                    b.Navigation("Configurations");

                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}

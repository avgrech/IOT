@inherits LayoutComponentBase
@inject ApiService Api
@implements IDisposable

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            @if (Api.IsAuthenticated && !string.IsNullOrEmpty(Api.Username))
            {
                <span>Hello, @Api.Username</span>
            }
        </div>

        <article class="content px-4">
            <ErrorBoundary @ref="errorBoundary">
                <ChildContent>
                    @Body
                </ChildContent>
                <ErrorContent>
                    <ErrorDisplay Error="context" OnDismiss="Recover" />
                </ErrorContent>
            </ErrorBoundary>
        </article>
    </main>
</div>

@code {
    private ErrorBoundary? errorBoundary;

    protected override void OnInitialized()
    {
        Api.AuthStateChanged += HandleAuthChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Api.InitializeAsync();
        }
    }

    private void Recover()
    {
        errorBoundary?.Recover();
    }

    private void HandleAuthChanged() => InvokeAsync(StateHasChanged);

    public void Dispose()
    {
        Api.AuthStateChanged -= HandleAuthChanged;
    }
}

